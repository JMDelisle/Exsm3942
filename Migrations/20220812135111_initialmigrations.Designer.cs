// <auto-generated />
using System;
using ClassroomStart.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassroomStart.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220812135111_initialmigrations")]
    partial class initialmigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("ClassroomStart.Models.Account", b =>
                {
                    b.Property<int>("AccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("acc_id");

                    b.Property<decimal>("AccBalance")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimals(5,2)")
                        .HasColumnName("acc_balance");

                    b.Property<int>("AccClientid")
                        .HasColumnType("int(11)")
                        .HasColumnName("acc_clientid");

                    b.Property<DateTime>("AccInterestapplieddate")
                        .HasColumnType("datetime")
                        .HasColumnName("acc_interestapplieddate");

                    b.Property<int>("AccTypeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("acc_type_id");

                    b.HasKey("AccId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccClientid" }, "acc_clientid");

                    b.HasIndex(new[] { "AccTypeId" }, "acc_type_id");

                    b.ToTable("account", (string)null);

                    b.HasData(
                        new
                        {
                            AccId = -1,
                            AccBalance = 165000m,
                            AccClientid = -1,
                            AccInterestapplieddate = new DateTime(1979, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AccTypeId = -1
                        },
                        new
                        {
                            AccId = -2,
                            AccBalance = 25000m,
                            AccClientid = -2,
                            AccInterestapplieddate = new DateTime(2010, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AccTypeId = -1
                        },
                        new
                        {
                            AccId = -3,
                            AccBalance = 99000m,
                            AccClientid = -1,
                            AccInterestapplieddate = new DateTime(2015, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AccTypeId = -2
                        },
                        new
                        {
                            AccId = -4,
                            AccBalance = 5000m,
                            AccClientid = -2,
                            AccInterestapplieddate = new DateTime(2020, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AccTypeId = -2
                        },
                        new
                        {
                            AccId = -5,
                            AccBalance = 345000m,
                            AccClientid = -2,
                            AccInterestapplieddate = new DateTime(2018, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AccTypeId = -3
                        },
                        new
                        {
                            AccId = -6,
                            AccBalance = 109656m,
                            AccClientid = -1,
                            AccInterestapplieddate = new DateTime(2004, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AccTypeId = -3
                        });
                });

            modelBuilder.Entity("ClassroomStart.Models.Accounttype", b =>
                {
                    b.Property<int>("AtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("at_id");

                    b.Property<decimal>("AtInterestrate")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("at_interestrate");

                    b.Property<string>("AtName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("at_name");

                    b.HasKey("AtId")
                        .HasName("PRIMARY");

                    b.ToTable("accounttype", (string)null);

                    b.HasData(
                        new
                        {
                            AtId = -1,
                            AtInterestrate = 0.75m,
                            AtName = "Standard Saving"
                        },
                        new
                        {
                            AtId = -2,
                            AtInterestrate = 3.69m,
                            AtName = "Standard Saving"
                        },
                        new
                        {
                            AtId = -3,
                            AtInterestrate = 1.25m,
                            AtName = "Standard Saving"
                        });
                });

            modelBuilder.Entity("ClassroomStart.Models.Client", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("c_id");

                    b.Property<DateTime>("CBirthdate")
                        .HasColumnType("datetime")
                        .HasColumnName("c_birthdate");

                    b.Property<string>("CFirstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("c_firstname");

                    b.Property<string>("CHomeaddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("c_homeaddress");

                    b.Property<string>("CLastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("c_lastname");

                    b.HasKey("CId")
                        .HasName("PRIMARY");

                    b.ToTable("client", (string)null);

                    b.HasData(
                        new
                        {
                            CId = -1,
                            CBirthdate = new DateTime(1955, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CFirstname = "Borat",
                            CHomeaddress = "12345-123 St North, Cincinatti, OH, 87542",
                            CLastname = "Sagdiyev"
                        },
                        new
                        {
                            CId = -2,
                            CBirthdate = new DateTime(1968, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CFirstname = "Zac",
                            CHomeaddress = "456 Pecanwood Way",
                            CLastname = "Ingram"
                        },
                        new
                        {
                            CId = -3,
                            CBirthdate = new DateTime(1968, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CFirstname = "Charles",
                            CHomeaddress = "789 Maplewood Way",
                            CLastname = "Sheen"
                        },
                        new
                        {
                            CId = -4,
                            CBirthdate = new DateTime(1968, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CFirstname = "Callie",
                            CHomeaddress = "012 Cedarwood Way",
                            CLastname = "Whittington"
                        });
                });

            modelBuilder.Entity("ClassroomStart.Models.Account", b =>
                {
                    b.HasOne("ClassroomStart.Models.Client", "AccClient")
                        .WithMany("Accounts")
                        .HasForeignKey("AccClientid")
                        .IsRequired()
                        .HasConstraintName("account_ibfk_1");

                    b.HasOne("ClassroomStart.Models.Accounttype", "AccType")
                        .WithMany("Accounts")
                        .HasForeignKey("AccTypeId")
                        .IsRequired()
                        .HasConstraintName("account_ibfk_2");

                    b.Navigation("AccClient");

                    b.Navigation("AccType");
                });

            modelBuilder.Entity("ClassroomStart.Models.Accounttype", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ClassroomStart.Models.Client", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
